{
  "version": 3,
  "sources": ["../../@roxi/routify/runtime/decorators/Noop.svelte", "../../@roxi/routify/runtime/store.js", "../../@roxi/routify/runtime/utils/onPageLoaded.js", "../../@roxi/routify/runtime/utils/urlToRoute.js", "../../@roxi/routify/runtime/Prefetcher.svelte", "../../@roxi/routify/runtime/helpers.js", "../../@roxi/routify/runtime/Route.svelte", "../../@roxi/routify/runtime/navigator.js", "../../@roxi/routify/runtime/Router.svelte"],
  "sourcesContent": [null, "import { writable, derived } from 'svelte/store'\nimport '../typedef'\n\nwindow.routify = window.routify || {}\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const route = writable(null) // the actual route being rendered\n\n/** @type {import('svelte/store').Writable<RouteNode[]>} */\nexport const routes = writable([]) // all routes\nroutes.subscribe(routes => (window.routify.routes = routes))\n\nexport let rootContext = writable({ component: { params: {} } })\n\n/** @type {import('svelte/store').Writable<RouteNode>} */\nexport const urlRoute = writable(null)  // the route matching the url\n\nexport const prefetchPath = writable(\"\")\n\nexport const isChangingPage = writable(true)", "import { currentLocation, handleScroll } from './index'\n\n\nexport async function onPageLoaded({ page, metatags, afterPageLoad, parentNode }) {\n    //scroll needs to run after page load\n    const scrollToTop = page.last !== page\n    setTimeout(() => handleScroll(parentNode, scrollToTop))\n\n    const { path } = page\n    const { options } = currentLocation()\n    const prefetchId = options.prefetch\n\n    for (const hook of afterPageLoad._hooks) {\n        // deleted/invalidated hooks are left as undefined\n        if (hook) await hook(page.api)\n    }\n\n    metatags.update()\n\n    dispatchEvent(new CustomEvent('app-loaded'))\n    parent.postMessage({\n        msg: 'app-loaded',\n        prefetched: window.routify.prefetched,\n        path,\n        prefetchId\n    }, \"*\")\n    window['routify'].appLoaded = true\n    window['routify'].stopAutoReady = false\n}\n", "import { get } from 'svelte/store'\nimport * as stores from '../store'\nimport config from '../../runtime.config'\nimport { parseUrl, resolveUrl } from './index'\n\n/**\n * @param {string} url \n * @return {ClientNode}\n */\nexport function urlToRoute(url, clone = false) {\n    url = config.urlTransform.remove(url)\n    let { pathname, search } = parseUrl(url).url\n\n    /** @type {RouteNode[]} */\n    const routes = get(stores.routes)\n    const matchingRoute =\n        // find a route with a matching name\n        routes.find(route => pathname === route.meta.name) ||\n        // or a matching path\n        routes.find(route => pathname.match(route.regex))\n\n    if (!matchingRoute)\n        throw new Error(`Route could not be found for \"${pathname}\".`)\n\n    // we want to clone if we're only previewing an URL\n    const _matchingRoute = clone ? Object.create(matchingRoute) : matchingRoute\n\n    const { route, redirectPath, rewritePath } = resolveRedirects(_matchingRoute, routes)\n\n    if (rewritePath) {\n        ({ pathname, search } = parseUrl(resolveUrl(rewritePath, route.params)).url)\n        if (redirectPath)\n            route.redirectTo = resolveUrl(redirectPath, route.params || {});\n    }\n\n    if (config.queryHandler)\n        route.params = Object.assign({}, config.queryHandler.parse(search))\n\n    assignParamsToRouteAndLayouts(route, pathname)\n\n    route.leftover = url.replace(new RegExp(route.regex), '')\n    return route\n}\n\nfunction assignParamsToRouteAndLayouts(route, pathname) {\n    if (route.paramKeys) {\n        const layouts = layoutByPos(route.layouts)\n        const fragments = pathname.split('/').filter(Boolean)\n        const routeProps = getRouteProps(route.path)\n\n        routeProps.forEach((prop, i) => {\n            if (prop) {\n                route.params[prop] = fragments[i]\n                if (layouts[i]) layouts[i].param = { [prop]: fragments[i] }\n                else route.param = { [prop]: fragments[i] }\n            }\n        })\n    }\n}\n\n/**\n * \n * @param {RouteNode} route \n * @param {RouteNode[]} routes \n * @param {*} params \n */\nfunction resolveRedirects(route, routes, redirectPath, rewritePath) {\n    const { redirect, rewrite } = route.meta\n\n    if (redirect || rewrite) {\n        redirectPath = redirect ? redirect.path || redirect : redirectPath\n        rewritePath = rewrite ? rewrite.path || rewrite : redirectPath\n        const redirectParams = redirect && redirect.params\n        const rewriteParams = rewrite && rewrite.params\n\n        const newRoute = routes.find(r => r.path.replace(/\\/index$/,'') === rewritePath)\n\n        if (newRoute === route) console.error(`${rewritePath} is redirecting to itself`)\n        if (!newRoute) console.error(`${route.path} is redirecting to non-existent path: ${rewritePath}`)\n        if (redirectParams || rewriteParams)\n            newRoute.params = Object.assign({}, newRoute.params, redirectParams, rewriteParams)\n\n        return resolveRedirects(newRoute, routes, redirectPath, rewritePath)\n    }\n    return { route, redirectPath, rewritePath }\n}\n\n\n/**\n * @param {array} layouts\n */\nfunction layoutByPos(layouts) {\n    const arr = []\n    layouts.forEach(layout => {\n        arr[layout.path.split('/').filter(Boolean).length - 1] = layout\n    })\n    return arr\n}\n\n\n/**\n * @param {string} url\n */\nfunction getRouteProps(url) {\n    return url\n        .split('/')\n        .filter(Boolean)\n        .map(f => f.match(/\\:(.+)/))\n        .map(f => f && f[1])\n}\n", null, "import {getContext, tick} from 'svelte'\nimport {derived, get, writable} from 'svelte/store'\nimport {route, routes, rootContext, isChangingPage} from './store'\nimport {resolveUrl} from './utils'\nimport {onPageLoaded} from './utils/onPageLoaded.js'\nimport {urlToRoute} from './utils/urlToRoute'\nimport {prefetch as _prefetch} from './Prefetcher.svelte'\n/// <reference path=\"../typedef.js\" />\n\n/** @ts-check */\n/**\n * @typedef {Object} RoutifyContext\n * @prop {ClientNode} component\n * @prop {ClientNode} layout\n * @prop {any} componentFile \n * \n *  @returns {import('svelte/store').Readable<RoutifyContext>} */\nfunction getRoutifyContext() {\n  return getContext('routify') || rootContext\n}\n\nexport const nodes = {\n  subscribe(run) {\n    const nodes = []\n    return derived(routes, routes => {\n      routes.forEach(route => {\n        const layouts = route.layouts\n          .map(layout => layout.api)\n          .filter(api => !nodes.includes(api))\n        nodes.push(route.api, ...layouts)\n      })\n\n      // enhance find method\n      const find = nodes.find\n      nodes.find = (value, ...args) => {\n        // if value is string, return route which name or path matches value\n        if (typeof value === 'string')\n          return nodes.find(n => n.meta.name === value) ||\n            nodes.find(n => n.path === value)\n        // or default to Array.find\n        else return find.bind(nodes)(value, ...args)\n      }\n\n      return nodes\n    }).subscribe(run)\n  }\n}\n\nexport const components = nodes\n\n/**\n * @typedef {import('svelte/store').Readable<ClientNodeApi>} ClientNodeHelperStore\n * @type { ClientNodeHelperStore } \n */\nexport const page = {\n  subscribe(run) {\n    return derived(route, route => route.api).subscribe(run)\n  }\n}\n\n/** @type {ClientNodeHelperStore} */\nexport const node = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.component.api).subscribe(run)\n  }\n}\n\n/** @type {ClientNodeHelperStore} */\nexport const layout = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.layout.api).subscribe(run)\n  }\n}\n\n/**\n* @typedef {{component: ClientNode}}  ContextHelper\n* @typedef {import('svelte/store').Readable<ContextHelper>} ContextHelperStore\n* @type {ContextHelperStore}\n*/\nexport const context = {\n  subscribe(run) {\n    return getRoutifyContext().subscribe(run)\n  }\n}\n\n/**\n * @typedef {function():void} ReadyHelper\n * @typedef {import('svelte/store').Readable<ReadyHelper>} ReadyHelperStore\n * @type {ReadyHelperStore}\n*/\nexport const ready = {\n  subscribe(run) {\n    window['routify'].stopAutoReady = true\n    async function ready() {\n      await tick()\n      await onPageLoaded({page: get(route), metatags, afterPageLoad})\n    }\n    run(ready)\n    return () => {}\n  }\n}\n\n/**\n * @callback AfterPageLoadHelper\n * @param {function} callback\n * \n * @typedef {import('svelte/store').Readable<AfterPageLoadHelper> & {_hooks:Array<function>}} AfterPageLoadHelperStore\n * @type {AfterPageLoadHelperStore}\n */\nexport const afterPageLoad = {\n  _hooks: [\n    event => isChangingPage.set(false)\n  ],\n  subscribe: hookHandler\n}\n\n/** \n * @callback BeforeUrlChangeHelper\n * @param {function} callback\n *\n * @typedef {import('svelte/store').Readable<BeforeUrlChangeHelper> & {_hooks:Array<function>}} BeforeUrlChangeHelperStore\n * @type {BeforeUrlChangeHelperStore}\n **/\nexport const beforeUrlChange = {\n  _hooks: [],\n  subscribe: hookHandler\n}\n\nfunction hookHandler(listener) {\n  const hooks = this._hooks\n  const index = hooks.length\n  listener(callback => {hooks[index] = callback})\n  return (...params) => {\n    delete hooks[index]\n    listener(...params)\n  }\n}\n\n/**\n * We have to grab params and leftover from the context and not directly from the store.\n * Otherwise the context is updated before the component is destroyed. * \n * @typedef {Object.<string, *>} ParamsHelper\n * @typedef {import('svelte/store').Readable<ParamsHelper>} ParamsHelperStore\n * @type {ParamsHelperStore}\n **/\nexport const params = {\n  subscribe(run) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.route.params).subscribe(run)\n  }\n}\n\n/**\n * @typedef {string} LeftoverHelper\n * @typedef {import('svelte/store').Readable<string>} LeftoverHelperStore\n * @type {LeftoverHelperStore} \n **/\nexport const leftover = {\n  subscribe(listener) {\n    return derived(\n      route,\n      route => route.leftover\n    ).subscribe(listener)\n  },\n}\n\n/** * \n * @param {ClientNodeApi} descendant \n * @param {ClientNodeApi} ancestor \n * @param {boolean} treatIndexAsAncestor \n */\nexport function isAncestor(ancestor, descendant, treatIndexAsAncestor = true) {\n  ancestor = ancestor.__file || ancestor\n  descendant = descendant.__file || descendant\n  const siblings = descendant.parent === ancestor.parent\n\n  if (!ancestor.isIndex) return false\n  if (descendant.shortPath === ancestor.shortPath) return false\n\n  if (siblings && !descendant.isDir) return !!treatIndexAsAncestor\n  return descendant.shortPath.startsWith(ancestor.shortPath)\n}\n\n\n/**\n * @typedef {import('svelte/store').Readable<Meta>} MetaHelperStore \n * @type {MetaHelperStore}\n * */\nexport const meta = {\n  subscribe(listener) {\n    const ctx = getRoutifyContext()\n    return derived(ctx, ctx => ctx.layout.meta).subscribe(listener)\n  },\n}\n\n/**\n * @typedef {{\n *   (el: Node): {update: (args: any) => void;}\n *   (path?: string | undefined, params?: UrlParams | undefined, options?: UrlOptions | undefined): string;\n * }} UrlHelper\n * @typedef {import('svelte/store').Readable<UrlHelper>} UrlHelperStore\n * @type {UrlHelperStore} \n * */\nexport const url = {\n  subscribe(listener) {\n    const ctx = getRoutifyContext()\n    return derived(\n      ctx,\n      ctx => makeUrlHelper(ctx, ctx.route, ctx.routes)\n    ).subscribe(\n      listener\n    )\n  }\n}\n\n/** \n * @param {{component: ClientNode}} $ctx \n * @param {RouteNode} $currentRoute \n * @param {RouteNode[]} $routes \n * @returns {UrlHelper}\n */\nexport function makeUrlHelper($ctx, $currentRoute, $routes) {\n  return function url(path, params = {}, options) {\n    const {component} = $ctx\n    const inheritedParams = Object.assign({}, $currentRoute.params, component.params)\n    let el = path && path.nodeType && path\n\n    if (el)\n      path = path.getAttribute('href')\n\n    path = path ? resolvePath(path) : component.shortPath\n\n    // preload the route  \n    const route = $routes.find(route => [route.shortPath || '/', route.path].includes(path))\n    if (route && route.meta.preload === 'proximity' && window.requestIdleCallback) {\n      const delay = routify.appLoaded ? 0 : 1500\n      setTimeout(() => {\n        window.requestIdleCallback(() => route.api.preload())\n      }, delay)\n    }\n\n    const strict = options && options.strict !== false\n    if (!strict) path = path.replace(/index$/, '')\n\n    let url = resolveUrl(path, params, inheritedParams)\n\n    if (el) {\n      el.href = url\n      return {\n        update(changedParams) {el.href = resolveUrl(path, changedParams, inheritedParams)}\n      }\n    }\n\n    return url\n\n    /**\n     * converts relative, named and absolute paths to absolute paths\n     * example: at `/foo/bar/baz`  the path  `../bar2/:something`  converts to   `/foo/bar2/:something`\n     * @param {*} path \n     */\n    function resolvePath(path) {\n      if (path.match(/^\\.\\.?\\//)) {\n        //RELATIVE PATH\n        let [, breadcrumbs, relativePath] = path.match(/^([\\.\\/]+)(.*)/)\n        let dir = component.path.replace(/\\/$/, '')\n        const traverse = breadcrumbs.match(/\\.\\.\\//g) || []\n        // if this is a page, we want to traverse one step back to its folder\n        if (component.isPage) traverse.push(null)\n        traverse.forEach(() => dir = dir.replace(/\\/[^\\/]+\\/?$/, ''))\n        path = `${dir}/${relativePath}`.replace(/\\/$/, '')\n        path = path || '/' // empty means root\n      } else if (path.match(/^\\//)) {\n        // ABSOLUTE PATH\n      } else {\n        // NAMED PATH\n        const matchingRoute = $routes.find(route => route.meta.name === path)\n        if (matchingRoute) path = matchingRoute.shortPath\n      }\n      return path\n    }\n\n\n\n  }\n}\n\n\n/**\n* @callback GotoHelper\n* @param {String=} path\n* @param {UrlParams=} params\n* @param {GotoOptions=} options\n*\n* @typedef {import('svelte/store').Readable<GotoHelper>}  GotoHelperStore\n* @type {GotoHelperStore} \n* */\nexport const goto = {\n  subscribe(listener) {\n    const routifyUpdatePage = getContext('routifyupdatepage')\n    return derived(url,\n      url => function goto(path, params, _static, shallow) {\n        const href = url(path, params)\n        if (!_static) history.pushState({}, null, href)\n        else routifyUpdatePage(href, shallow)\n      }\n    ).subscribe(\n      listener\n    )\n  },\n}\n\n/**\n * @type {GotoHelperStore} \n * */\nexport const redirect = {\n  subscribe(listener) {\n    const routifyUpdatePage = getContext('routifyupdatepage')\n    return derived(url,\n      url => function redirect(path, params, _static, shallow) {\n        const href = url(path, params)\n        if (!_static) history.replaceState({}, null, href)\n        else routifyUpdatePage(href, shallow)\n      }\n    ).subscribe(\n      listener\n    )\n  },\n}\n\n/**\n * @callback IsActiveHelper\n * @param {String=} path\n * @param {UrlParams=} params\n * @param {UrlOptions=} options\n * @returns {Boolean}\n * \n * @typedef {import('svelte/store').Readable<IsActiveHelper>} IsActiveHelperStore\n * @type {IsActiveHelperStore} \n * */\nexport const isActive = {\n  subscribe(run) {\n    return derived(\n      [url, route],\n      ([url, route]) => function isActive(path = \"\", params = {}, {strict} = {strict: true}) {\n        path = url(path, params, {strict})\n        const currentPath = url(route.path, params, {strict})\n        const re = new RegExp('^' + path + '($|/)')\n        return !!currentPath.match(re)\n      }\n    ).subscribe(run)\n  },\n}\n\n/**\n * @param {string|ClientNodeApi} path \n * @param {*} options \n */\nexport function precache(path, options) {\n  const node = typeof path === 'string' ? urlToRoute(path) : path\n  node.component()\n}\n\n/**\n * @param {string|ClientNodeApi} path \n * @param {*} options \n */\nexport function prefetch(path, options) {\n  _prefetch(path, options)\n}\n\n/**\n * @typedef {[ClientNodeApi, ClientNodeApi, ClientNodeApi]} ConcestorReturn\n * @typedef {function(ClientNodeApi, ClientNodeApi):ConcestorReturn} GetConcestor\n * @type {GetConcestor}\n */\nexport function getConcestor(nodeApi1, nodeApi2) {\n  const node1 = nodeApi1.__file\n  const node2 = nodeApi2.__file\n\n  // The route is the last piece of layout\n  const lineage1 = [...node1.lineage, node1]\n  const lineage2 = [...node2.lineage, node2]\n\n  let concestor = lineage1[0] //root\n  let children = [lineage1[0].api, lineage2[0].api]\n  // iterate through the layouts starting from the root\n  lineage1.forEach((n1, i) => {\n    const n2 = lineage2[i]\n    if (n2 && n1.parent === n2.parent) {\n      concestor = n1.parent\n      children = [n1.api, n2.api]\n    }\n  })\n  return [concestor.api, children[0], children[1]]\n}\n\n/**\n * Get index difference between two paths\n *\n * @export\n * @param {array} paths\n * @param {object} newPath\n * @param {object} oldPath\n * @returns {number}\n */\nexport function getDirection(paths, newPath, oldPath) {\n  const newIndex = paths.findIndex(path => newPath.path.startsWith(path))\n  const oldIndex = paths.findIndex(path => oldPath.path.startsWith(path))\n  return newIndex - oldIndex\n}\n\n/**\n * Sets element to active\n * @typedef {function(HTMLElement):void} FocusHelper\n * @type {FocusHelper}\n */\nexport function focus(element) {\n  if (!focusIsSet) {\n    focusIsSet = true\n    element.setAttribute('tabindex', \"0\")\n    element.focus()\n    setTimeout(() => (focusIsSet = false))\n  }\n}\nlet focusIsSet = false\n\n\n\nconst _metatags = {\n  subscribe(listener) {\n    this._origin = this.getOrigin()\n    return listener(metatags)\n  },\n  props: {},\n  templates: {},\n  services: {\n    plain: {propField: 'name', valueField: 'content'},\n    twitter: {propField: 'name', valueField: 'content'},\n    og: {propField: 'property', valueField: 'content'},\n  },\n  plugins: [\n    {\n      name: 'applyTemplate',\n      condition: () => true,\n      action: (prop, value) => {\n        const template = _metatags.getLongest(_metatags.templates, prop) || (x => x)\n        return [prop, template(value)]\n      }\n    },\n    {\n      name: 'createMeta',\n      condition: () => true,\n      action(prop, value) {\n        _metatags.writeMeta(prop, value)\n      }\n    },\n    {\n      name: 'createOG',\n      condition: prop => !prop.match(':'),\n      action(prop, value) {\n        _metatags.writeMeta(`og:${prop}`, value)\n      }\n    },\n    {\n      name: 'createTitle',\n      condition: prop => prop === 'title',\n      action(prop, value) {\n        document.title = value;\n      }\n    }\n  ],\n  getLongest(repo, name) {\n    const providers = repo[name]\n    if (providers) {\n      const currentPath = get(route).path\n      const allPaths = Object.keys(repo[name])\n      const matchingPaths = allPaths.filter(path => currentPath.includes(path))\n\n      const longestKey = matchingPaths.sort((a, b) => b.length - a.length)[0]\n\n      return providers[longestKey]\n    }\n  },\n  writeMeta(prop, value) {\n    const head = document.getElementsByTagName('head')[0]\n    const match = prop.match(/(.+)\\:/)\n    const serviceName = match && match[1] || 'plain'\n    const {propField, valueField} = metatags.services[serviceName] || metatags.services.plain\n    const oldElement = document.querySelector(`meta[${propField}='${prop}']`)\n    if (oldElement) oldElement.remove()\n\n    const newElement = document.createElement('meta')\n    newElement.setAttribute(propField, prop)\n    newElement.setAttribute(valueField, value)\n    newElement.setAttribute('data-origin', 'routify')\n    head.appendChild(newElement)\n  },\n  set(prop, value) {\n    // we only want strings. If metatags is used as a store, svelte will try to assign an object to prop\n    if (typeof prop === 'string') {\n      _metatags.plugins.forEach(plugin => {\n        if (plugin.condition(prop, value))\n          [prop, value] = plugin.action(prop, value) || [prop, value]\n      })\n    }\n  },\n  clear() {\n    const oldElement = document.querySelector(`meta`)\n    if (oldElement) oldElement.remove()\n  },\n  template(name, fn) {\n    const origin = _metatags.getOrigin\n    _metatags.templates[name] = _metatags.templates[name] || {}\n    _metatags.templates[name][origin] = fn\n  },\n  update() {\n    Object.keys(_metatags.props).forEach((prop) => {\n      let value = (_metatags.getLongest(_metatags.props, prop))\n      _metatags.plugins.forEach(plugin => {\n        if (plugin.condition(prop, value)) {\n          [prop, value] = plugin.action(prop, value) || [prop, value]\n\n        }\n      })\n    })\n  },\n  batchedUpdate() {\n    if (!_metatags._pendingUpdate) {\n      _metatags._pendingUpdate = true\n      setTimeout(() => {\n        _metatags._pendingUpdate = false\n        this.update()\n      })\n    }\n  },\n  _updateQueued: false,\n  _origin: false,\n  getOrigin() {\n    if (this._origin) return this._origin\n    const routifyCtx = getRoutifyContext()\n    return routifyCtx && get(routifyCtx).path || '/'\n  },\n  _pendingUpdate: false\n}\n\n\n/**\n * metatags\n * @prop {Object.<string, string>}\n */\nexport const metatags = new Proxy(_metatags, {\n  set(target, name, value, receiver) {\n    const {props} = target\n\n    if (Reflect.has(target, name))\n      Reflect.set(target, name, value, receiver)\n    else {\n      props[name] = props[name] || {}\n      props[name][target.getOrigin()] = value\n    }\n\n    if (window['routify'].appLoaded)\n      target.batchedUpdate()\n    return true\n  }\n})", null, "import * as stores from './store'\nimport { get } from 'svelte/store'\nimport { beforeUrlChange } from './helpers'\nimport { urlToRoute } from './utils/urlToRoute'\nimport { currentLocation } from './utils'\n\nexport function init(routes, callback) {\n  /** @type { ClientNode | false } */\n  let lastRoute = false\n\n  function updatePage(proxyToUrl, shallow) {\n    const url = proxyToUrl || currentLocation().fullpath\n    const route = urlToRoute(url)\n    if (route.redirectTo) {\n      history.replaceStateNative({}, null, route.redirectTo)\n      delete route.redirectTo\n    }\n\n    const currentRoute = shallow && urlToRoute(currentLocation().fullpath, routes)\n    const contextRoute = currentRoute || route\n    const nodes = [...contextRoute.layouts, route]\n    if (lastRoute) delete lastRoute.last //todo is a page component the right place for the previous route?\n    route.last = lastRoute\n    lastRoute = route\n\n    //set the route in the store\n    if (!proxyToUrl)\n      stores.urlRoute.set(route)\n    stores.route.set(route)\n\n    //preload components in parallel\n    route.api.preload().then(() => {\n      //run callback in Router.svelte    \n      stores.isChangingPage.set(true)\n      callback(nodes)\n    })\n  }\n\n  const destroy = createEventListeners(updatePage)\n\n  return { updatePage, destroy }\n}\n\n/**\n * svelte:window events doesn't work on refresh\n * @param {Function} updatePage\n */\nfunction createEventListeners(updatePage) {\n  // history.*state\n  ;['pushState', 'replaceState'].forEach(eventName => {\n    if (!history[eventName + 'Native'])\n      history[eventName + 'Native'] = history[eventName]\n    history[eventName] = async function (state = {}, title, url) {\n      // do nothing if we're navigating to the current page\n      const currentUrl = location.pathname + location.search + location.hash\n      if (url === currentUrl) return false\n\n      const { id, path, params } = get(stores.route)\n      state = { id, path, params, ...state }\n      const event = new Event(eventName.toLowerCase())\n      Object.assign(event, { state, title, url })\n\n      const route = await runHooksBeforeUrlChange(event, url)\n      if (route) {\n        history[eventName + 'Native'].apply(this, [state, title, url])\n        return dispatchEvent(event)\n      }\n    }\n  })\n\n  let _ignoreNextPop = false\n\n  const listeners = {\n    click: handleClick,\n    pushstate: () => updatePage(),\n    replacestate: () => updatePage(),\n    popstate: async event => {\n      if (_ignoreNextPop)\n        _ignoreNextPop = false\n      else {\n        if (await runHooksBeforeUrlChange(event, currentLocation().fullpath)) {\n          updatePage()\n        } else {\n          _ignoreNextPop = true\n          event.preventDefault()\n          history.go(1)\n        }\n      }\n    },\n  }\n\n  Object.entries(listeners).forEach(args => addEventListener(...args))\n\n  const unregister = () => {\n    Object.entries(listeners).forEach(args => removeEventListener(...args))\n  }\n\n  return unregister\n}\n\nfunction handleClick(event) {\n  const el = event.target.closest('a') || event.composedPath().find(el => el.tagName === 'A')\n  const href = el && el.href\n  if (\n    event.ctrlKey ||\n    event.metaKey ||\n    event.altKey ||\n    event.shiftKey ||\n    event.button ||\n    event.defaultPrevented\n  )\n    return\n  if (!href || el.target || el.host !== location.host) return\n\n  const url = new URL(href)\n  const relativeUrl = url.pathname + url.search + url.hash\n\n  event.preventDefault()\n  history.pushState({}, '', relativeUrl)\n}\n\nasync function runHooksBeforeUrlChange(event, url) {\n  const route = urlToRoute(url).api\n  for (const hook of beforeUrlChange._hooks.filter(Boolean)) {\n    // return false if the hook returns false\n    const result = await hook(event, route, { url })\n    if (!result) return false\n  }\n  return true\n}\n\n", null],
  "mappings": "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",
  "names": ["routes", "page", "metatags", "afterPageLoad", "url", "routes", "route", "redirect", "layout", "ctx", "actives", "entry", "q", "nodes", "routes", "route", "layout", "ctx", "ready", "params", "url", "path", "goto", "redirect", "isActive", "node", "prefetch", "element", "ctx", "nodes", "node", "context", "meta", "params", "init", "routes", "url", "route", "nodes", "params", "el", "create_if_block", "ctx", "routes", "nodes", "navigator", "init"]
}
