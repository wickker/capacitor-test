{
  "version": 3,
  "sources": ["../../@roxi/routify/runtime/plugins/tree.js", "../../@roxi/routify/runtime/middleware.js", "../../@roxi/routify/runtime.config.js", "../../@roxi/routify/runtime/utils/index.js", "../../@roxi/routify/runtime/utils/normalizeNode.js", "../../@roxi/routify/runtime/plugins/assignAPI.js", "../../@roxi/routify/runtime/buildRoutes.js"],
  "sourcesContent": ["import { createNodeMiddleware } from '../middleware'\nimport { pathToParamKeys, pathToRank, pathToRegex } from '../utils'\n\nexport const setRegex = createNodeMiddleware(({ file }) => {\n    if (file.isPage || file.isFallback)\n        file.regex = pathToRegex(file.path, file.isFallback)\n})\nexport const setParamKeys = createNodeMiddleware(({ file }) => {\n    file.paramKeys = pathToParamKeys(file.path)\n})\n\nexport const setShortPath = createNodeMiddleware(({ file }) => {\n    if (file.isFallback || file.isIndex)\n        file.shortPath = file.path.replace(/\\/[^/]+$/, '')\n    else file.shortPath = file.path\n})\nexport const setRank = createNodeMiddleware(({ file }) => {\n    file.ranking = pathToRank(file)\n})\n\n\n// todo delete?\nexport const addMetaChildren = createNodeMiddleware(({ file }) => {\n    const node = file\n    const metaChildren = file.meta && file.meta.children || []\n    if (metaChildren.length) {\n        node.children = node.children || []\n        node.children.push(...metaChildren.map(meta => ({ isMeta: true, ...meta, meta })))\n    }\n})\n\nexport const setIsIndexable = createNodeMiddleware(payload => {\n    const { file } = payload\n    const { isFallback, meta } = file\n    const isDynamic = file.path.split('/').pop().startsWith(':')\n    const isIndex = file.path.endsWith('/index')\n    const isIndexed = meta.index || meta.index === 0\n    const isHidden = meta.index === false\n\n    file.isIndexable = isIndexed || (!isFallback && !isDynamic && !isIndex && !isHidden)\n    file.isNonIndexable = !file.isIndexable\n})\n\nexport const assignRelations = createNodeMiddleware(({ file, parent }) => {\n    Object.defineProperty(file, 'parent', { get: () => parent })\n    Object.defineProperty(file, 'nextSibling', { get: () => _getSibling(file, 1) })\n    Object.defineProperty(file, 'prevSibling', { get: () => _getSibling(file, -1) })\n    Object.defineProperty(file, 'lineage', { get: () => _getLineage(parent) })\n})\n\nfunction _getLineage(node, lineage = []) {\n    if (node) {\n        lineage.unshift(node)\n        _getLineage(node.parent, lineage)\n    }\n    return lineage\n}\n\n/**\n * \n * @param {RouteNode} file \n * @param {Number} direction \n */\nfunction _getSibling(file, direction) {\n    if (!file.root) {\n        const siblings = file.parent.children.filter(c => c.isIndexable)\n        const index = siblings.indexOf(file)\n        return siblings[index + direction]\n    }\n}\n\nexport const assignIndex = createNodeMiddleware(({ file, parent }) => {\n    if (file.isIndex) Object.defineProperty(parent, 'index', { get: () => file })\n})\n\nexport const assignLayout = createNodeMiddleware(({ file, scope }) => {\n    // create a layouts getter\n    Object.defineProperty(file, 'layouts', { get: () => getLayouts(file) })\n\n    /**\n     * returns a list of layouts by recursively traversing the AST ancestry\n     * @param {RouteNode} file \n     * @returns {RouteNode[]}\n     */\n    function getLayouts(file) {\n        // if this isn't a layout and it's reset, return an empty array\n        if (!file.isLayout && file.meta.reset) return []\n\n        const { parent } = file\n        const layout = parent && parent.component && parent\n        const isReset = layout && (layout.isReset || layout.meta.reset)\n        const layouts = (parent && !isReset && getLayouts(parent)) || []\n        if (layout) layouts.push(layout)\n        return layouts\n    }\n})\n\n\nexport const createFlatList = treePayload => {\n    createNodeMiddleware(payload => {\n        if (payload.file.isPage || payload.file.isFallback)\n            payload.state.treePayload.routes.push(payload.file)\n    }).sync(treePayload)\n    treePayload.routes.sort((c, p) => (c.ranking >= p.ranking ? -1 : 1))\n}\n\nexport const setPrototype = createNodeMiddleware(({ file }) => {\n    const Prototype = file.root\n        ? Root\n        : file.children\n            ? file.isPage ? PageDir : Dir\n            : file.isReset\n                ? Reset\n                : file.isLayout\n                    ? Layout\n                    : file.isFallback\n                        ? Fallback\n                        : Page\n    Object.setPrototypeOf(file, Prototype.prototype)\n\n    function Layout() { }\n    function Dir() { }\n    function Fallback() { }\n    function Page() { }\n    function PageDir() { }\n    function Reset() { }\n    function Root() { }\n})\n", "/** \n * Node payload\n * @typedef {Object} NodePayload\n * @property {RouteNode=} file current node\n * @property {RouteNode=} parent parent of the current node\n * @property {StateObject=} state state shared by every node in the walker\n * @property {Object=} scope scope inherited by descendants in the scope\n *\n * State Object\n * @typedef {Object} StateObject\n * @prop {TreePayload=} treePayload payload from the tree\n * \n * Node walker proxy\n * @callback NodeWalkerProxy\n * @param {NodePayload} NodePayload\n */\n\n\n/**\n * Node middleware\n * @description Walks through the nodes of a tree\n * @example middleware = createNodeMiddleware(payload => {payload.file.name = 'hello'})(treePayload))\n * @param {NodeWalkerProxy} fn \n */\nfunction createNodeMiddleware(fn) {\n\n    /**    \n     * NodeMiddleware payload receiver\n     * @param {TreePayload} payload\n     */\n    const inner = async function execute(payload) {\n        return await nodeMiddleware(fn, {\n            file: payload.tree,\n            state: { treePayload: payload },\n            scope: {}\n        })\n    }\n\n    /**    \n     * NodeMiddleware sync payload receiver\n     * @param {TreePayload} payload\n     */\n    inner.sync = function executeSync(payload) {\n        return nodeMiddlewareSync(fn, {\n            file: payload.tree,\n            state: { treePayload: payload },\n            scope: {}\n        })\n    }\n\n    return inner\n}\n\n/**\n * Node walker\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nasync function nodeMiddleware(fn, payload) {\n    const _file = await fn(payload)\n    if (_file === false) return false\n    const file = _file || payload.file\n\n    if (file.children) {\n        const children = await Promise.all(file.children.map(async _file => nodeMiddleware(fn, {\n            state: payload.state,\n            scope: clone(payload.scope || {}),\n            parent: payload.file,\n            file: await _file\n        })))\n        file.children = children.filter(Boolean)\n    }\n\n    return file\n}\n\n/**\n * Node walker (sync version)\n * @param {NodeWalkerProxy} fn function to be called for each file\n * @param {NodePayload=} payload \n */\nfunction nodeMiddlewareSync(fn, payload) {\n    const _file = fn(payload)\n    if (_file === false) return false\n\n    const file = _file || payload.file\n\n    if (file.children) {\n        const children = file.children.map(_file => nodeMiddlewareSync(fn, {\n            state: payload.state,\n            scope: clone(payload.scope || {}),\n            parent: payload.file,\n            file: _file\n        }))\n        file.children = children.filter(Boolean)\n    }\n\n    return file\n}\n\n\n/**\n * Clone with JSON\n * @param {T} obj \n * @returns {T} JSON cloned object\n * @template T\n */\nfunction clone(obj) { return JSON.parse(JSON.stringify(obj)) }\n\nexport {\n    nodeMiddleware,\n    nodeMiddlewareSync,\n    createNodeMiddleware\n}\n", "export default {\n    queryHandler: {\n        parse: search => fromEntries(new URLSearchParams(search)),\n        stringify: params => '?' + (new URLSearchParams(params)).toString()\n    },\n    urlTransform: {\n        apply: x => x,\n        remove: x => x\n    },\n    useHash: false\n}\n\n\nfunction fromEntries(iterable) {\n    return [...iterable].reduce((obj, [key, val]) => {\n        obj[key] = val\n        return obj\n    }, {})\n}", "import config from '../../runtime.config'\n\nconst MATCH_PARAM = RegExp(/\\:([^/()]+)/g)\n\nexport function handleScroll(element, scrollToTop) {\n  if (navigator.userAgent.includes('jsdom')) return false\n  if (scrollToTop) scrollAncestorsToTop(element)\n  handleHash()\n}\n\nexport function handleHash() {\n  if (navigator.userAgent.includes('jsdom')) return false\n  const { hash } = window.location\n  if (hash) {\n    const el = document.getElementById(hash.substring(1))\n    if (el) el.scrollIntoView()\n  }\n}\n\nexport function scrollAncestorsToTop(element) {\n  if (\n    element &&\n    element.scrollTo &&\n    element.dataset.routify !== 'scroll-lock' &&\n    element.dataset['routify-scroll'] !== 'lock'\n  ) {\n    element.style['scroll-behavior'] = 'auto'\n    element.scrollTo({ top: 0, behavior: 'auto' })\n    element.style['scroll-behavior'] = ''\n    scrollAncestorsToTop(element.parentElement)\n  }\n}\n\nexport const pathToRegex = (str, recursive) => {\n  const suffix = recursive ? '' : '/?$' //fallbacks should match recursively\n  str = str.replace(/\\/_fallback?$/, '(/|$)')\n  str = str.replace(/\\/index$/, '(/index)?') //index files should be matched even if not present in url\n  str = str.replace(MATCH_PARAM, '([^/]+)') + suffix\n  str = `^${str}`\n  return str\n}\n\nexport const pathToParamKeys = string => {\n  const paramsKeys = []\n  let matches\n  while ((matches = MATCH_PARAM.exec(string))) paramsKeys.push(matches[1])\n  return paramsKeys\n}\n\nexport const pathToRank = ({ path }) => {\n  return path\n    .split('/')\n    .filter(Boolean)\n    .map(str => (str === '_fallback' ? 'A' : str.startsWith(':') ? 'B' : 'C'))\n    .join('')\n}\n\n/** Supresses Routify caused logs and warnings for one tick */\nexport function suppressComponentWarnings(ctx, tick) {\n  suppressComponentWarnings._console = suppressComponentWarnings._console || { log: console.log, warn: console.warn }\n  const { _console } = suppressComponentWarnings\n\n  const name = ctx.componentFile.name\n    .replace(/Proxy<_?(.+)>/, '$1') //nollup wraps names in Proxy<...>\n    .replace(/^Index$/, ctx.component.shortPath.split('/').pop()) //nollup names Index.svelte index. We want a real name\n    .replace(/^./, s => s.toUpperCase()) //capitalize first letter\n    .replace(/\\:(.+)/, 'U5B$1u5D') // :id => U5Bidu5D\n\n  const ignores = [\n    `<${name}> received an unexpected slot \"default\".`,\n    `<${name}> was created with unknown prop 'scoped'`,\n    `<${name}> was created with unknown prop 'scopedSync'`,\n  ]\n  for (const log of ['log', 'warn']) {\n    console[log] = (...args) => {\n      if (!ignores.includes(args[0]))\n        _console[log](...args)\n    }\n    tick().then(() => {\n      //after component has been created, we want to restore the console method (log or warn)\n      console[log] = _console[log]\n    })\n  }\n}\n\nexport function currentLocation() {\n  let dirtyFullpath = window.location.pathname + window.location.search + window.location.hash\n  const { url, options } = resolvePrefetch(dirtyFullpath)\n  const parsedUrl = parseUrl(url)\n\n  return { ...parsedUrl, options }\n}\n\n/**\n * converts /path/to__routify_url_options__1234abcde to\n * {options, url: '/path/to'}\n * @param {string} dirtyFullpath \n */\nfunction resolvePrefetch(dirtyFullpath) {\n  const [url, _options] = dirtyFullpath.split('__[[routify_url_options]]__')\n\n  const options = JSON.parse(decodeURIComponent(_options || '') || '{}')\n\n  window.routify = window.routify || {}\n  window.routify.prefetched = options.prefetch\n\n  return { url, options }\n}\n\n/**\n * \n * @param {string} url \n */\nexport function parseUrl(url) {\n  if (config.useHash)\n    url = url.replace(/.*#(.+)/, '$1')\n  const origin = url.startsWith('/') ? window.location.origin : undefined\n  const _url = new URL(url, origin)\n  const fullpath = _url.pathname + _url.search + _url.hash\n  return { url: _url, fullpath }\n}\n\n\n/**\n * populates parameters, applies urlTransform, prefixes hash\n * eg. /foo/:bar to /foo/something or #/foo/something\n * and applies config.urlTransform\n * @param {*} path \n * @param {*} params \n */\nexport function resolveUrl(path, params, inheritedParams) {\n  const hash = config.useHash ? '#' : ''\n  let url\n  url = populateUrl(path, params, inheritedParams)\n  url = config.urlTransform.apply(url)\n  url = hash + url\n  return url\n}\n\n\n/**\n * populates an url path with parameters\n * populateUrl('/home/:foo', {foo: 'something', bar:'baz'})  to /foo/something?bar=baz\n * @param {*} path \n * @param {*} params \n */\nexport function populateUrl(path, params, inheritedParams) {\n  const allParams = Object.assign({}, inheritedParams, params)\n  const queryString = getQueryString(path, params)\n\n  for (const [key, value] of Object.entries(allParams))\n    path = path.replace(new RegExp(`:${key}(\\/|$)`), value + \"$1\")\n\n  return `${path}${queryString}`\n}\n\n\n/**\n * \n * @param {string} path \n * @param {object} params \n */\nfunction getQueryString(path, params) {\n  if (!config.queryHandler) return \"\"\n  const ignoredKeys = pathToParamKeys(path)\n  const queryParams = {}\n  if (params) Object.entries(params).forEach(([key, value]) => {\n    if (!ignoredKeys.includes(key))\n      queryParams[key] = value\n  })\n  return config.queryHandler.stringify(queryParams).replace(/\\?$/, '')\n}", "export const defaultNode = {\n    \"isDir\": false,\n    \"ext\": \"svelte\",\n    \"isLayout\": false,\n    \"isReset\": false,\n    \"isIndex\": false,\n    \"isFallback\": false,\n    \"isPage\": false,\n    \"ownMeta\": {},\n    \"meta\": {\n        \"recursive\": true,\n        \"preload\": false,\n        \"prerender\": true\n    },\n    \"id\": \"__fallback\",\n}\n\nconst devProps = [\n    'file', 'filepath', 'name', 'badExt', 'relativeDir', 'absolutePath',\n    'importPath', 'isFile'\n]\n\n/** @param {TreePayload} node  */\nexport function stripDefaultsAndDevProps(node) {\n    const strippedNode = {}\n\n    Object.entries(node)\n        .filter(([key]) => !devProps.includes(key))\n        .filter(([key, value]) => JSON.stringify(defaultNode[key]) !== JSON.stringify(value))\n        .forEach(([key, value]) => strippedNode[key] = value)\n\n    if (node.children)\n        strippedNode.children = [...node.children.map(stripDefaultsAndDevProps)]\n\n    return strippedNode\n}\n\nexport function restoreDefaults(node) {\n    Object.entries(defaultNode).forEach(([key, value]) => {\n        if (typeof node[key] === 'undefined')\n            node[key] = value\n    })\n    \n    if(node.children)\n        node.children = node.children.map(restoreDefaults)\n\n    return node\n}", "import { createNodeMiddleware } from '../middleware'\nexport const assignAPI = createNodeMiddleware(({ file }) => {\n    file.api = new ClientApi(file)\n})\n\nclass ClientApi {\n    constructor(file) {\n        this.__file = file\n        Object.defineProperty(this, '__file', { enumerable: false })\n        this.isMeta = !!file.isMeta\n        this.path = file.path\n        this.title = _prettyName(file)\n        this.meta = file.meta\n    }\n\n    get parent() { return !this.__file.root && this.__file.parent.api }\n    get children() {\n        return (this.__file.children || this.__file.isLayout && this.__file.parent.children || [])\n            .filter(c => !c.isNonIndexable)\n            .sort((a, b) => {\n                if (a.isMeta && b.isMeta) return 0\n                a = (a.meta.index || a.meta.title || a.path).toString()\n                b = (b.meta.index || b.meta.title || b.path).toString()\n                return a.localeCompare((b), undefined, { numeric: true, sensitivity: 'base' })\n            })\n            .map(({ api }) => api)\n    }\n    get next() { return _navigate(this, +1) }\n    get prev() { return _navigate(this, -1) }\n    async preload() {\n        const filePromises = [\n            ...this.__file.layouts,\n            this.__file,\n            this.index && this.index.__file //if this is a layout, we want to include its index\n        ]\n            .filter(Boolean)\n            .map(file => file.component())\n        await Promise.all(filePromises)\n    }\n    get component() {\n        return this.__file.component ? //is file?\n            this.__file.component()\n            : this.__file.index ? //is dir with index?\n                this.__file.index.component()\n                : false\n    }\n    get componentWithIndex() {\n        return new Promise(resolve =>\n            Promise.all([\n                this.component,\n                this.index && this.index.component\n            ])\n                .then(res => resolve(res))\n        )\n    }\n    get index() {\n        const child = this.__file.children &&\n            this.__file.children.find(child => child.isIndex)\n        return child && child.api\n    }\n}\n\nfunction _navigate(node, direction) {\n    if (!node.__file.root) {\n        const siblings = node.parent.children\n        const index = siblings.indexOf(node)\n        return node.parent.children[index + direction]\n    }\n}\n\n\nfunction _prettyName(file) {\n    if (typeof file.meta.title !== 'undefined') return file.meta.title\n    else return (file.shortPath || file.path)\n        .split('/')\n        .pop()\n        .replace(/-/g, ' ')\n}\n\n", "\n\nimport * as miscPlugins from './plugins/tree'\nimport { restoreDefaults } from './utils/normalizeNode'\nimport { assignAPI } from './plugins/assignAPI'\n\nconst plugins = {\n  ...miscPlugins,\n  restoreDefaults: ({ tree }) => restoreDefaults(tree),\n  assignAPI\n}\n\nexport function buildClientTree(tree) {\n  const order = [\n    // all\n    \"restoreDefaults\",\n    // pages\n    \"setParamKeys\", //pages only\n    \"setRegex\", //pages only\n    \"setShortPath\", //pages only\n    \"setRank\", //pages only\n    \"assignLayout\", //pages only,\n    // all\n    \"setPrototype\",\n    \"addMetaChildren\",\n    \"assignRelations\", //all (except meta components?)\n    \"setIsIndexable\", //all\n    \"assignIndex\", //all\n    \"assignAPI\", //all\n    // routes\n    \"createFlatList\"\n  ]\n\n  const payload = { tree, routes: [] }\n  for (let name of order) {\n    // if plugin is a createNodeMiddleware, use the sync function\n    const fn = plugins[name].sync || plugins[name]\n    fn(payload)\n  }\n  return payload\n}"],
  "mappings": "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",
  "names": ["_file", "file", "child"]
}
